{"version":3,"sources":["../../src/core/create-resolver.ts"],"sourcesContent":["import { fileURLToPath } from \"node:url\";\nimport { dirname, resolve } from \"pathe\";\n\n/**\n * Allows resolving paths relatively to the integration folder easily. Call it like this:\n *\n * @param {string} _base - The location you want to create relative references from. `import.meta.url` is usually what you'll want.\n *\n * @see https://astro-integration-kit.netlify.app/utilities/create-resolver/\n *\n * @example\n * ```ts\n * const { resolve } = createResolver(import.meta.url);\n * const pluginPath = resolve(\"./plugin.ts\");\n * ```\n *\n * This way, you do not have to add your plugin to your package.json `exports`.\n */\nexport const createResolver = (_base: string) => {\n\tlet base = _base;\n\tif (base.startsWith(\"file://\")) {\n\t\tbase = dirname(fileURLToPath(base));\n\t}\n\n\treturn {\n\t\tresolve: (...path: Array<string>) => resolve(base, ...path),\n\t};\n};\n"],"mappings":"AAAA,OAAS,iBAAAA,MAAqB,WAC9B,OAAS,WAAAC,EAAS,WAAAC,MAAe,QAiB1B,IAAMC,EAAkBC,GAAkB,CAChD,IAAIC,EAAOD,EACX,OAAIC,EAAK,WAAW,SAAS,IAC5BA,EAAOJ,EAAQD,EAAcK,CAAI,CAAC,GAG5B,CACN,QAAS,IAAIC,IAAwBJ,EAAQG,EAAM,GAAGC,CAAI,CAC3D,CACD","names":["fileURLToPath","dirname","resolve","createResolver","_base","base","path"]}