import { D as DeepPartial } from '../type-utils.d-CSknV27i.js';
import * as astro from 'astro';
import { InjectedRoute } from 'astro';

/**
 * Allows you to inject a route in development only
 *
 * @param {import("astro").HookParameters<"astro:config:setup">} params
 * @param {object} options
 * @param {import("astro").InjectedRoute} options.injectedRoute
 *
 * @example
 * ```ts
 * injectDevRoute(params, {
 * 		pattern: "/foo",
 * 		entrypoint: resolve("./pages/foo.astro")
 * })
 * ```
 *
 * @see https://astro-integration-kit.netlify.app/utilities/inject-dev-route/
 */
declare const injectDevRoute: ({ command, injectRoute }: {
    config: astro.AstroConfig;
    command: "dev" | "build" | "preview";
    isRestart: boolean;
    updateConfig: (newConfig: DeepPartial<astro.AstroConfig>) => astro.AstroConfig;
    addRenderer: (renderer: astro.AstroRenderer) => void;
    addWatchFile: (path: string | URL) => void;
    injectScript: (stage: astro.InjectedScriptStage, content: string) => void;
    injectRoute: (injectRoute: InjectedRoute) => void;
    addClientDirective: (directive: astro.ClientDirectiveConfig) => void;
    addDevOverlayPlugin: (entrypoint: string) => void;
    addDevToolbarApp: (entrypoint: string) => void;
    addMiddleware: (mid: astro.AstroIntegrationMiddleware) => void;
    logger: astro.AstroIntegrationLogger;
}, injectedRoute: InjectedRoute) => void;

export { injectDevRoute };
