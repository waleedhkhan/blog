import{mkdirSync as f,readFileSync as y,writeFileSync as p}from"node:fs";import{dirname as m,relative as d}from"node:path";import{fileURLToPath as a}from"node:url";import{parse as l,prettyPrint as g}from"recast";import k from"recast/parsers/typescript.js";var c=r=>n=>n;var u=({srcDir:r,logger:n,specifier:e})=>{let s=a(new URL("env.d.ts",r));e instanceof URL&&(e=a(e),e=d(a(r),e),e=e.replaceAll("\\","/"));let t=y(s,"utf8");if(t.includes(`/// <reference types='${e}' />`)||t.includes(`/// <reference types="${e}" />`))return;let o=t.replace("/// <reference types='astro/client' />",`/// <reference types='astro/client' />
/// <reference types='${e}' />`).replace('/// <reference types="astro/client" />',`/// <reference types="astro/client" />
/// <reference types="${e}" />`);o!==t&&(p(s,o),n.info("Updated env.d.ts types"))},h=c("astro:config:setup")(({config:{root:r,srcDir:n},logger:e},{name:s,content:t})=>{let o=new URL(`.astro/${s}.d.ts`,r),i=a(o);u({srcDir:n,logger:e,specifier:o}),f(m(i),{recursive:!0}),p(i,g(l(t,{parser:k}),{tabWidth:4}).code,"utf-8")});export{h as addDts};
//# sourceMappingURL=add-dts.js.map