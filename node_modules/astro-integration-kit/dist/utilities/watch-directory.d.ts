import { D as DeepPartial } from '../type-utils.d-CSknV27i.js';
import * as astro from 'astro';

/**
 * In development, will reload the Astro dev server if any files within
 * the directory has changed.
 *
 * @param {import("astro").HookParameters<"astro:config:setup">} params
 * @param {string} directory
 *
 * @see https://astro-integration-kit.netlify.app/utilities/watch-directory/
 *
 * @example
 * ```ts
 * watchDirectory(params, resolve())
 * ```
 */
declare const watchDirectory: ({ addWatchFile, command, updateConfig }: {
    config: astro.AstroConfig;
    command: "dev" | "build" | "preview";
    isRestart: boolean;
    updateConfig: (newConfig: DeepPartial<astro.AstroConfig>) => astro.AstroConfig;
    addRenderer: (renderer: astro.AstroRenderer) => void;
    addWatchFile: (path: string | URL) => void;
    injectScript: (stage: astro.InjectedScriptStage, content: string) => void;
    injectRoute: (injectRoute: astro.InjectedRoute) => void;
    addClientDirective: (directive: astro.ClientDirectiveConfig) => void;
    addDevOverlayPlugin: (entrypoint: string) => void;
    addDevToolbarApp: (entrypoint: string) => void;
    addMiddleware: (mid: astro.AstroIntegrationMiddleware) => void;
    logger: astro.AstroIntegrationLogger;
}, directory: string) => void;

export { watchDirectory };
