import { Plugin } from '../core/types.js';
import * as astro from 'astro';
import { AstroConfig } from 'astro';
import { D as DeepPartial } from '../type-utils.d-CSknV27i.js';
import { PluginOption } from 'vite';
import '../internal/types.js';

declare const hasVitePluginPlugin: Plugin<"hasVitePlugin", {
    "astro:config:setup": (params: {
        config: AstroConfig;
        command: "build" | "preview" | "dev";
        isRestart: boolean;
        updateConfig: (newConfig: DeepPartial<AstroConfig>) => AstroConfig;
        addRenderer: (renderer: astro.AstroRenderer) => void;
        addWatchFile: (path: string | URL) => void;
        injectScript: (stage: astro.InjectedScriptStage, content: string) => void;
        injectRoute: (injectRoute: astro.InjectedRoute) => void;
        addClientDirective: (directive: astro.ClientDirectiveConfig) => void;
        addDevOverlayPlugin: (entrypoint: string) => void;
        addDevToolbarApp: (entrypoint: string) => void;
        addMiddleware: (mid: astro.AstroIntegrationMiddleware) => void;
        logger: astro.AstroIntegrationLogger;
    }) => {
        hasVitePlugin: (plugin: string | PluginOption) => boolean;
    };
}>;

export { hasVitePluginPlugin };
