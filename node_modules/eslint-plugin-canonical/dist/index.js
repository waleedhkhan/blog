"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const recommended_json_1 = __importDefault(require("./configs/recommended.json"));
const destructuringPropertyNewline_1 = __importDefault(require("./rules/destructuringPropertyNewline"));
const exportSpecifierNewline_1 = __importDefault(require("./rules/exportSpecifierNewline"));
const filenameMatchExported_1 = __importDefault(require("./rules/filenameMatchExported"));
const filenameMatchRegex_1 = __importDefault(require("./rules/filenameMatchRegex"));
const filenameNoIndex_1 = __importDefault(require("./rules/filenameNoIndex"));
const idMatch_1 = __importDefault(require("./rules/idMatch"));
const importSpecifierNewline_1 = __importDefault(require("./rules/importSpecifierNewline"));
const noBarrelImport_1 = __importDefault(require("./rules/noBarrelImport"));
const noExportAll_1 = __importDefault(require("./rules/noExportAll"));
const noImportNamespaceDestructure_1 = __importDefault(require("./rules/noImportNamespaceDestructure"));
const noReExport_1 = __importDefault(require("./rules/noReExport"));
const noReassignImports_1 = __importDefault(require("./rules/noReassignImports"));
const noRestrictedImports_1 = __importDefault(require("./rules/noRestrictedImports"));
const noRestrictedStrings_1 = __importDefault(require("./rules/noRestrictedStrings"));
const noUseExtendNative_1 = __importDefault(require("./rules/noUseExtendNative"));
const preferImportAlias_1 = __importDefault(require("./rules/preferImportAlias"));
const preferInlineTypeImport_1 = __importDefault(require("./rules/preferInlineTypeImport"));
const preferReactLazy_1 = __importDefault(require("./rules/preferReactLazy"));
const preferUseMount_1 = __importDefault(require("./rules/preferUseMount"));
const requireExtension_1 = __importDefault(require("./rules/requireExtension"));
const sortReactDependencies_1 = __importDefault(require("./rules/sortReactDependencies"));
// Should be `ESLint.Plugin` but doesn't match with `createRule` results
const index = {
    configs: {},
    rules: {
        'destructuring-property-newline': destructuringPropertyNewline_1.default,
        'export-specifier-newline': exportSpecifierNewline_1.default,
        'filename-match-exported': filenameMatchExported_1.default,
        'filename-match-regex': filenameMatchRegex_1.default,
        'filename-no-index': filenameNoIndex_1.default,
        'id-match': idMatch_1.default,
        'import-specifier-newline': importSpecifierNewline_1.default,
        'no-barrel-import': noBarrelImport_1.default,
        'no-export-all': noExportAll_1.default,
        'no-import-namespace-destructure': noImportNamespaceDestructure_1.default,
        'no-re-export': noReExport_1.default,
        'no-reassign-imports': noReassignImports_1.default,
        'no-restricted-imports': noRestrictedImports_1.default,
        'no-restricted-strings': noRestrictedStrings_1.default,
        'no-use-extend-native': noUseExtendNative_1.default,
        'prefer-import-alias': preferImportAlias_1.default,
        'prefer-inline-type-import': preferInlineTypeImport_1.default,
        'prefer-react-lazy': preferReactLazy_1.default,
        'prefer-use-mount': preferUseMount_1.default,
        'require-extension': requireExtension_1.default,
        'sort-react-dependencies': sortReactDependencies_1.default,
    },
    rulesConfig: {
        'destructuring-property-newline': 0,
        'export-specifier-newline': 0,
        'filename-match-exported': 0,
        'filename-match-regex': 0,
        'filename-no-index': 0,
        'id-match': 0,
        'import-specifier-newline': 0,
        'no-barrel-import': 0,
        'no-reassign-imports': 0,
        'no-restricted-imports': 0,
        'no-restricted-strings': 0,
        'no-use-extend-native': 0,
        'prefer-inline-type-import': 0,
        'prefer-react-lazy': 0,
        'prefer-use-mount': 0,
        'require-extension': 0
    },
};
const flatRecommended = JSON.parse(JSON.stringify(recommended_json_1.default));
flatRecommended.plugins = {
    canonical: index,
};
flatRecommended.languageOptions = {
    parserOptions: flatRecommended.parserOptions,
};
delete flatRecommended.parserOptions;
index.configs['flat/recommended'] = flatRecommended;
index.configs.recommended = recommended_json_1.default;
module.exports = index;
