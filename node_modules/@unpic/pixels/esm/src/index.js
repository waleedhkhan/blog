import { decode as jpgDecoder } from "jpeg-js";
import { PNG } from "pngjs/browser.js";
import { getPixels as getPixelsImpl, } from "./get-pixels.js";
import { Buffer } from "node:buffer";
export { getDataFromUrl, getFormat } from "./get-pixels.js";
const decoders = {
    jpg: (image) => jpgDecoder(image, { useTArray: true }),
    png: (image) => {
        return new Promise((resolve, reject) => {
            const png = new PNG({ filterType: 4 });
            const buf = Buffer.from(image);
            png.parse(buf, (err, decoded) => {
                if (err) {
                    reject(err);
                }
                else {
                    const { width, height, data } = decoded;
                    resolve({ width, height, data });
                }
            });
        });
    },
};
/**
 * Gets the raw pixel data from an image source.
 * The source can be a URL, a string containing the URL, a Uint8Array containing the image data,
 * or an ArrayBuffer containing the image data.
 */
export const getPixels = (source) => {
    return getPixelsImpl(source, decoders);
};
