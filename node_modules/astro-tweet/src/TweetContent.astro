---
import { getTweet } from "./api";
import EmbeddedTweet from "./twitter-theme/EmbeddedTweet.astro";
import TweetNotFound from "./twitter-theme/TweetNotFound.astro";
import type { TwitterComponents } from "./twitter-theme/types";
interface Props {
  id: string;
  components?: TwitterComponents;
  fetchOptions?: RequestInit;
  onError?: ((error: any) => any) | undefined;
}

const { id, components, fetchOptions, onError } = Astro.props;
let error;
const tweet = id
  ? await getTweet(id, fetchOptions).catch((err) => {
      if (onError) {
        error = onError(err);
      } else {
        console.error(err);
        error = err;
      }
    })
  : undefined;
let tweetNotFound = false;
// TODO: typing
let NotFound: any;
if (!tweet) {
  NotFound = components?.TweetNotFound || TweetNotFound;
  tweetNotFound = true;
}
---

{
  tweetNotFound ? (
    <NotFound error={error} />
  ) : (
    <EmbeddedTweet tweet={tweet!} components={components} />
  )
}
